#logging.level.org.springframework=debug

#Data source
spring.datasource.url=jdbc:mysql://localhost:3306/db_weight_contr_app?serverTimezone=UTC
spring.datasource.username=weight_contr_user
spring.datasource.password=contr59Wei3

#Jpa/Hibernate (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
hibernate.format_sql=true;

#Spring Security login queries
#security.basic.enabled=false

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

#for authentication
#spring.queries.users-query=select email, password, '1' as enabled from auth_user where email=? and status='VERIFIED'
#
##for authorisation
#spring.queries.roles-query=select u.email, r.role_name from auth_user u inner join auth_user_role ur on(u.auth_user_id=ur.auth_user_id) inner join auth_role r on(ur.auth_role_id=r.auth_role_id) where u.email=?

## Jackson Properties
#spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
#spring.jackson.time-zone= UTC

#spring.security.user.password=user
##spring.security.user.name=password

jwt.signing.key.secret=mySecret
jwt.get.token.uri=/authenticate
jwt.refresh.token.uri=/refresh
jwt.http.request.header=Authorization
jwt.token.expiration.in.seconds=604800